class SmootherPeaksProvider{constructor(t,s=5){this.music=t,this.smoothingWindow=s,this.peaks=[],this.smoothedPeaks=[],this.setup()}setup(){this.peaks=this.music.getPeaks(GameConfig.canvas.size),this.smoothedPeaks=this.smoothPeaks(this.peaks)}smoothPeaks(i){var e=[];for(let t=0;t<i.length;t++){var h=Math.max(0,t-this.smoothingWindow),a=Math.min(i.length-1,t+this.smoothingWindow);let s=0;for(let t=h;t<=a;t++)s+=i[t];e.push(s/(a-h+1))}return e}getSmoothedPeaks(){return this.smoothedPeaks}}class Obstacle{constructor(t,s=0,i=15,e=5){this.lanePositions=t,this.currentLane=s,this.position=createVector(25,-5,-500),this.size=i,this.speed=e,this.color=color(255,0,0),this.collideDistance=i/2}setLane(t){0<=t&&t<this.lanePositions.length&&(this.currentLane=t,this.position.x=this.lanePositions[this.currentLane])}update(){this.position.z+=this.speed}collidesWith(t){return dist(this.position.x,this.position.y,this.position.z,t.position.x,t.position.y,t.position.z)<this.collideDistance}draw(){push(),fill(this.color),noStroke(),translate(this.position.x,this.position.y,this.position.z),box(this.size),pop()}}class Player{constructor(t,s){this.lanePositions=s,this.currentLane=1,this.position=createVector(this.lanePositions[this.currentLane],0,20),this.width=t.width,this.height=t.height,this.depth=t.depth,this.targetX=this.position.x,this.lerpAmount=.1,this.collideDistance=4}draw(){this.position.x=lerp(this.position.x,this.targetX,this.lerpAmount),this.drawCar()}drawCar(){push(),translate(this.position.x,this.position.y,this.position.z),fill(250,255,250),noStroke(),box(this.width,this.height,this.depth),pop()}move(t){"left"===t&&0<this.currentLane?this.currentLane--:"right"===t&&this.currentLane<this.lanePositions.length-1&&this.currentLane++,this.targetX=this.lanePositions[this.currentLane]}collidesWith(t){return dist(this.position.x,this.position.y,this.position.z,t.position.x,t.position.y,t.position.z)<this.collideDistance}checkCollisions(t){t.forEach(t=>{this.collidesWith(t)&&!t._isCollided&&t.hit()})}hit(t){console.log("Player hit an entity!")}}class Star{constructor(t,s=0,i=15,e=5){this.lanePositions=t,this.currentLane=s,this.position=createVector(25,-5,-500),this.size=i,this.speed=e,this.color=color(255,223,0),this.collideDistance=i/2}setLane(t){0<=t&&t<this.lanePositions.length&&(this.currentLane=t,this.position.x=this.lanePositions[this.currentLane])}update(){this.position.z+=this.speed}collidesWith(t){return dist(this.position.x,this.position.y,this.position.z,t.position.x,t.position.y,t.position.z)<this.collideDistance}draw(){push(),fill(this.color),noStroke(),translate(this.position.x,this.position.y,this.position.z),box(this.size),pop()}}let gridPatterns=[[[0,1,0],[0,0,1],[0,1,0],[1,0,0],[0,0,1],[0,1,0],[0,0,0],[1,0,1],[0,1,0],[0,0,0],[0,0,0],[0,1,0]],[[0,2,0],[2,0,0],[0,2,0],[0,0,2],[2,0,0],[0,2,0],[0,0,0],[0,2,0],[2,0,2],[0,0,0],[0,2,0],[0,0,0]],[[0,0,1],[1,1,0],[0,1,0],[1,0,1],[0,0,0],[1,2,1],[0,2,0],[1,0,1],[0,1,0],[0,0,0],[0,2,0],[1,0,0]],[[1,0,2],[0,1,0],[2,0,1],[1,0,1],[0,2,0],[0,1,0],[0,0,0],[2,1,2],[0,0,0],[0,1,0],[1,0,1],[0,2,0]],[[2,0,0],[1,2,1],[0,0,2],[1,1,0],[0,2,0],[1,0,1],[0,0,0],[0,2,0],[2,1,0],[0,0,1],[0,2,0],[1,0,1]],[[0,1,0],[1,0,1],[0,2,0],[0,0,0],[2,1,2],[0,2,0],[1,0,1],[0,1,0],[0,2,0],[0,0,0],[2,0,2],[1,0,1]]];class CameraManager{constructor(){this.camera=createCamera(),this.mode="normal",this.cameraX=0}setMode(t){this.mode=t}update(t){this.cameraX=lerp(this.cameraX,t,.1),"normal"===this.mode?this.setNormalCamera():"test"===this.mode&&this.setTestCamera()}setNormalCamera(){this.camera.setPosition(this.cameraX,-30,100),this.camera.lookAt(this.cameraX,-30,0)}setTestCamera(){this.camera.setPosition(this.cameraX,-1200,50),this.camera.lookAt(this.cameraX,0,0)}}class Environment{constructor(t,s){this.sky=new Sky(GameConfig.sky),this.terrain=new Terrain(GameConfig.terrain),this.ground=new Ground(GameConfig.ground,t,s),this.rainbow=new Rainbow(s),this.stage=1}update(t,s){switch(this.stage){case 0:this.terrain.update(t);break;case 1:this.rainbow.update(t,s)}}display(t,s){switch(this.stage){case 0:this.sky.display(),this.terrain.display(s),this.ground.draw(t);break;case 1:this.sky.display(),this.ground.draw(t),this.rainbow.draw()}}}let CameraModes={GAMEPLAY:"normal",TEST:"test"};class GameManager{#speed;constructor(t){this.#speed=0,this.score=0,this.laneWidth=GameConfig.ground.width/GameConfig.lineCount,this.lanePositions=calculateLanePositions(GameConfig.ground.width,this.laneWidth,GameConfig.lineCount),this.soundManager=new SoundManager(t),this.speedManager=new SpeedManager(this.soundManager.getSmoothedPeeks()),this.cameraManager=new CameraManager,this.environment=new Environment(this.lanePositions,this.soundManager.getSmoothedPeeks()),this.player=new Player(GameConfig.player,this.lanePositions),this.patternManager=new PatternManager(gridPatterns,this.lanePositions,125,this.soundManager.getPeaks())}get speed(){return this.#speed}initialize(){this.soundManager.playMusic(),this.cameraManager.setMode(CameraModes.GAMEPLAY)}update(){this.soundManager.update(),this.#speed=this.soundManager.getCurrentSpeed(),this.environment.update(this.#speed,this.soundManager.getCurrentPeak()),this.cameraManager.update(this.player.position.x),this.patternManager.update(this.player),1<=this.soundManager.getProgress()&&this.endGame()}draw(){this.environment.display(this.player.currentLane),this.player.draw(),this.patternManager.draw()}togglePause(){this.soundManager.isPlaying()?this.soundManager.pauseMusic():this.soundManager.playMusic()}endGame(){this.soundManager.pauseMusic(),console.log("Game Over. Display Score UI.")}}class LaneLineManager{constructor(t,s){this.width=t,this.depth=s,this.lines=[],this.lines.push(new LaneLine(-this.width/2,this.depth,"a")),this.lines.push(new LaneLine(-this.width/6,this.depth,"b")),this.lines.push(new LaneLine(this.width/6,this.depth,"c")),this.lines.push(new LaneLine(this.width/2,this.depth,"d"))}draw(){this.lines.forEach(t=>t.draw())}activateLines(s){this.lines.forEach(t=>{s.includes(t.key)&&t.activate()}),setTimeout(()=>{this.lines.forEach(t=>t.deactivate())},1e3)}}class PatternManager{constructor(t,s,i){this.gridPatterns=t,this.lanePositions=s,this.platformGap=i,this.gameObjects=[],this.generateGameObjects()}generateGameObjects(){let i=-1e3;for(let t=0;t<this.gridPatterns.length;t++){var e=this.gridPatterns[t];for(let s=0;s<e.length;s++){var h=e[s];for(let t=0;t<h.length;t++){var a,o=h[t],r=this.lanePositions[t],n=i-s*this.platformGap;1===o?((a=new Star(this.lanePositions)).position.set(r,0,n),this.gameObjects.push(a)):2===o&&((a=new Obstacle(this.lanePositions)).position.set(r,0,n),this.gameObjects.push(a))}}i-=e.length*this.platformGap+200}}update(s){this.gameObjects.forEach(t=>t.update(s))}draw(){this.gameObjects.forEach(t=>t.draw())}}class PlatformManager{}class SoundManager{constructor(t){this.music=t,this.amplitude=new p5.Amplitude,this.smootherPeaksProvider=null,this.fft=new p5.FFT(.8,1024),this.bassThreshold=.1,this.smoothSpeed=1,this.targetSpeed=1,this.sensitivity=.6,this.setup()}setup(){this.music&&(this.music.loop(),this.pauseMusic(),this.amplitude.smooth(.9),this.peaks=this.music.getPeaks(width),this.smootherPeaksProvider=new SmootherPeaksProvider(this.music))}playMusic(){this.music&&!this.music.isPlaying()&&this.music.play()}pauseMusic(){this.music&&this.music.isPlaying()&&this.music.pause()}isPlaying(){return this.music&&this.music.isPlaying()}getPeaks(){return this.music.getPeaks(width)}getCurrentLevel(){return this.amplitude.getLevel()}getCurrentTime(){return this.music.currentTime()}getProgress(){return this.getCurrentTime()/this.music.duration()}getSmoothedPeeks(){return this.smootherPeaksProvider.getSmoothedPeaks()}getCurrentPeak(){var t;return this.peaks&&0!==this.peaks.length&&(t=this.getProgress(),t=Math.floor(t*this.peaks.length),this.peaks[t])||0}update(){this.getCurrentLevel();this.updateSpeed()}getBassLevel(){this.fft.analyze();return this.fft.getEnergy(20,250)/255}updateSpeed(){var t=this.getBassLevel(),t=(this.targetSpeed=map(t,0,1,1,25),this.sensitivity*(this.targetSpeed-this.smoothSpeed));this.smoothSpeed+=t}getCurrentSpeed(){return this.smoothSpeed}}class SpeedManager{#speed;constructor(t){this.#speed=1,this.smoothedPeaks=t}getSmoothSpeed(t){t=floor(t*this.smoothedPeaks.length),t=map(this.smoothedPeaks[t],-1,1,1,20);return this.#speed=lerp(this.#speed,t,.1),0|this.#speed}}class Ground{constructor(t,s){this.width=t.width,this.length=t.length,this.laneCount=t.laneCount,this.stripeWidth=t.stripeWidth,this.colorPalette=new ColorPalette,this.localX=20,this.stripes=[],this.initializeStripes(),this.laneWidth=this.width/this.laneCount,this.lanePositions=s}initializeStripes(){for(let t=1;t<this.laneCount;t++){var s=-this.width/2+t*this.laneWidth;this.stripes.push(s)}}draw(s){push(),translate(this.localX,5,-1200);for(let t=0;t<this.laneCount;t++)push(),t===s?fill(0,18,51,.5):fill(0,24,69,.2),noStroke(),translate(-this.width/2+t*this.laneWidth+this.laneWidth/2,0,this.length/2),rotateX(HALF_PI),plane(this.laneWidth,this.length),pop();pop()}}class Rainbow{constructor(t){this.phase=0,this.zoff=0,this.rot=0,this.settings={horn:!1,rotating:!0,level:1},this.position=createVector(20,0,-800),this.cachedShapes=[],this.shapeColors=[],this.zPositions=[],this.generateCachedShapes(),this.smoothPeaks=t}generateCachedShapes(){var e=[color(3,83,164),color(0,40,85),color(51,65,92),color(4,102,200)];for(let i=1;i<=60;i++){let t=this.settings.horn?1/i:1;var h=this.settings.horn?(70*(i+.2)-70)/8:(70*i-70)/5;let s=(30-i)/(this.settings.horn?15:18);var a=i%e.length;this.shapeColors.push(e[a]),this.zPositions.push(h),this.cachedShapes.push(()=>{this.noiseCircle(t,this.zPositions[i-1],s,this.shapeColors[i-1])})}}update(s,t){this.phase+=.002,this.zoff+=.4*t*(.01*s);for(let t=0;t<this.zPositions.length;t++)this.zPositions[t]+=.1*s,1e3<this.zPositions[t]&&(this.zPositions[t]=0)}draw(){push(),translate(this.position.x,this.position.y,this.position.z),this.cachedShapes.forEach(t=>t()),pop()}noiseCircle(s,i,t,e){beginShape(),strokeWeight(2.5),stroke(e),noFill();for(let t=0;t<TWO_PI;t+=.2){var h=map(cos(t+this.phase),-1,1,0,this.settings.level),a=map(sin(t+this.phase),-1,1,0,this.settings.level),h=map(noise(h,a,this.zoff),0,1,100,height/2),a=s*h*cos(t),h=s*h*sin(t);vertex(a,h,i)}endShape(CLOSE)}}class Sky{constructor(t){this.width=1280,this.height=t.height,this.starCount=t.starCount,this.canvasSky=this.createSky()}createSky(){var s=createGraphics(this.width,this.height);s.noFill(),s.noStroke(),s.fill(255,255,255,random(100,255));for(let t=0;t<this.starCount;t++)s.ellipse(random(0,this.width),random(0,this.height),random(2,6));return s}display(){push(),translate(0,-400,-1500),noStroke(),texture(this.canvasSky),plane(6e3,3e3),pop()}}class Terrain{constructor(t){this.rows=t.rows,this.cols=t.cols,this.size=t.size,this.altitude=t.altitude,this.trench=t.trench,this.baseColor=color(...t.color),this.strokeColor=color(...t.strokeColor),this.strokeWeight=3,this.terrainMesh=[],this.flying=0,this.rowPosition=0,this.isFlashing=!1,this.flashStartTime=0,this.flashDuration=1e3,this.initializeTerrain()}initializeTerrain(){for(let s=0;s<this.rows;s++){var i=[];for(let t=0;t<this.cols;t++)i.push(this.renderTerrainPoint(t,s));this.terrainMesh.push(i)}}renderTerrainPoint(t,s){let i;return i=t===this.trench||t===this.trench+1?random(0,.2)*this.size:t===this.trench-1||t===this.trench+2?map(noise(t,s),0,1,0,.2)*this.altitude:noise(t,s)*this.altitude}update(t){if(this.flying+=t,this.flying>=this.size){this.flying=0,this.rowPosition++,this.terrainMesh.pop();var s=[];for(let t=0;t<this.cols;t++)s.push(this.renderTerrainPoint(t,this.rowPosition));this.terrainMesh.unshift(s)}this.isFlashing&&((t=millis()-this.flashStartTime)>this.flashDuration?(this.isFlashing=!1,this.strokeWeight=3):this.strokeWeight=map(sin(.05*t),-1,1,3,6))}display(){push(),blendMode(BLEND),rotateX(PI/2),translate(-220,-2400,-40),fill(this.baseColor),stroke(this.strokeColor),strokeWeight(this.strokeWeight);for(let s=0;s<this.rows-1;s++){beginShape(TRIANGLE_STRIP);for(let t=0;t<this.cols;t++)vertex(t*this.size,s*this.size+this.flying,this.terrainMesh[s][t]),vertex(t*this.size,(s+1)*this.size+this.flying,this.terrainMesh[s+1][t]);endShape()}pop()}triggerFlashEffect(){this.isFlashing||(this.isFlashing=!0,this.flashStartTime=millis())}}let Color={NeonPink:{hex:"#ff2a6d",rgb:"rgb(255,42,109)"},NeonBlue:{hex:"#05d9e8",rgb:"rgb(5,217,232)"},NeonPurple:{hex:"#8f00ff",rgb:"rgb(143,0,255)"},NeonGreen:{hex:"#39ff14",rgb:"rgb(57,255,20)"},DeepBlack:{hex:"#01012b",rgb:"rgb(1,1,43)"},lineEffect:{x1:"rgb(255, 0, 255)",x2:"rgb(0, 255, 255)",x3:"rgb(255, 255, 0)"}};class ColorPalette{constructor(){this.hueOffset=0,this.hueSpeed=.1}hsvToRgb(i,e,h){var t=(t,s=(t+i/60)%6)=>h-h*e*Math.max(Math.min(s,4-s,1),0);return color(t(5),t(3),t(1))}waveColor(t,s=0){t=(this.hueOffset+t)%360;this.hueOffset+=this.hueSpeed;return this.hsvToRgb(t,1,1)}updateHueSpeed(t){this.hueSpeed=map(t,7,15,.1,.5)}}function calculateLanePositions(t,s,i){var e=[],h=t/2;for(let t=0;t<i;t++){var a=-h+t*s+s/2;e.push(20+a)}return e}